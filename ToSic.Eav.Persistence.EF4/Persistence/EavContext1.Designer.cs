//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AssignmentObjectType), "ToSIC_EAV_Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AttributeSet), "ToSIC_EAV_AttributeGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeGroup), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AttributeGroup), "ToSIC_EAV_AttributesInSets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeInSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Attribute), "ToSIC_EAV_AttributesInSets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeInSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AttributeSet), "ToSIC_EAV_AttributesInSets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeInSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AttributeSet), "ToSIC_EAV_Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_Entities", "ToSIC_EAV_Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.Entity), "ToSIC_EAV_Entities1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.AttributeType), "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Attribute), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Attachment), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Attachment), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Attribute), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Attribute), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "AttributeSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "AttributeSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EavValue), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EavValue), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Attribute), "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EavValue), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Entity), "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EavValue), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Zone), "ToSIC_EAV_Apps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.App), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.App), "AttributeSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Zone), "ToSIC_EAV_Dimensions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Dimension), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.Dimension), "ToSIC_EAV_Dimensions1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Dimension), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Dimension), "ToSIC_EAV_ValuesDimensions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.ValueDimension), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.EavValue), "ToSIC_EAV_ValuesDimensions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.ValueDimension), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.ChangeLog), "EavValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EavValue), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.AttributeSet), "AttributeSet1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.AttributeSet), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.ChangeLog), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.Entity), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Attribute), "ToSIC_EAV_EntityRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EntityRelationship), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ToSic.Eav.Entity), "ToSIC_EAV_EntityRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EntityRelationship), true)]
[assembly: EdmRelationshipAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToSic.Eav.Entity), "ToSIC_EAV_EntityRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToSic.Eav.EntityRelationship), true)]

#endregion

namespace ToSic.Eav
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EavContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EavContext object using the connection string found in the 'EavContext' section of the application configuration file.
        /// </summary>
        public EavContext() : base("name=EavContext", "EavContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EavContext object.
        /// </summary>
        public EavContext(string connectionString) : base(connectionString, "EavContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EavContext object.
        /// </summary>
        public EavContext(EntityConnection connection) : base(connection, "EavContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignmentObjectType> AssignmentObjectTypes
        {
            get
            {
                if ((_AssignmentObjectTypes == null))
                {
                    _AssignmentObjectTypes = base.CreateObjectSet<AssignmentObjectType>("AssignmentObjectTypes");
                }
                return _AssignmentObjectTypes;
            }
        }
        private ObjectSet<AssignmentObjectType> _AssignmentObjectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachment>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachment> _Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttributeGroup> AttributeGroups
        {
            get
            {
                if ((_AttributeGroups == null))
                {
                    _AttributeGroups = base.CreateObjectSet<AttributeGroup>("AttributeGroups");
                }
                return _AttributeGroups;
            }
        }
        private ObjectSet<AttributeGroup> _AttributeGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attribute> Attributes
        {
            get
            {
                if ((_Attributes == null))
                {
                    _Attributes = base.CreateObjectSet<Attribute>("Attributes");
                }
                return _Attributes;
            }
        }
        private ObjectSet<Attribute> _Attributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttributeSet> AttributeSets
        {
            get
            {
                if ((_AttributeSets == null))
                {
                    _AttributeSets = base.CreateObjectSet<AttributeSet>("AttributeSets");
                }
                return _AttributeSets;
            }
        }
        private ObjectSet<AttributeSet> _AttributeSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttributeInSet> AttributesInSets
        {
            get
            {
                if ((_AttributesInSets == null))
                {
                    _AttributesInSets = base.CreateObjectSet<AttributeInSet>("AttributesInSets");
                }
                return _AttributesInSets;
            }
        }
        private ObjectSet<AttributeInSet> _AttributesInSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entity> Entities
        {
            get
            {
                if ((_Entities == null))
                {
                    _Entities = base.CreateObjectSet<Entity>("Entities");
                }
                return _Entities;
            }
        }
        private ObjectSet<Entity> _Entities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EavValue> Values
        {
            get
            {
                if ((_Values == null))
                {
                    _Values = base.CreateObjectSet<EavValue>("Values");
                }
                return _Values;
            }
        }
        private ObjectSet<EavValue> _Values;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttributeType> AttributeTypes
        {
            get
            {
                if ((_AttributeTypes == null))
                {
                    _AttributeTypes = base.CreateObjectSet<AttributeType>("AttributeTypes");
                }
                return _AttributeTypes;
            }
        }
        private ObjectSet<AttributeType> _AttributeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChangeLog> ChangeLogs
        {
            get
            {
                if ((_ChangeLogs == null))
                {
                    _ChangeLogs = base.CreateObjectSet<ChangeLog>("ChangeLogs");
                }
                return _ChangeLogs;
            }
        }
        private ObjectSet<ChangeLog> _ChangeLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<App> Apps
        {
            get
            {
                if ((_Apps == null))
                {
                    _Apps = base.CreateObjectSet<App>("Apps");
                }
                return _Apps;
            }
        }
        private ObjectSet<App> _Apps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> Zones
        {
            get
            {
                if ((_Zones == null))
                {
                    _Zones = base.CreateObjectSet<Zone>("Zones");
                }
                return _Zones;
            }
        }
        private ObjectSet<Zone> _Zones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dimension> Dimensions
        {
            get
            {
                if ((_Dimensions == null))
                {
                    _Dimensions = base.CreateObjectSet<Dimension>("Dimensions");
                }
                return _Dimensions;
            }
        }
        private ObjectSet<Dimension> _Dimensions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ValueDimension> ValuesDimensions
        {
            get
            {
                if ((_ValuesDimensions == null))
                {
                    _ValuesDimensions = base.CreateObjectSet<ValueDimension>("ValuesDimensions");
                }
                return _ValuesDimensions;
            }
        }
        private ObjectSet<ValueDimension> _ValuesDimensions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataTimelineItem> DataTimeline
        {
            get
            {
                if ((_DataTimeline == null))
                {
                    _DataTimeline = base.CreateObjectSet<DataTimelineItem>("DataTimeline");
                }
                return _DataTimeline;
            }
        }
        private ObjectSet<DataTimelineItem> _DataTimeline;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityRelationship> EntityRelationships
        {
            get
            {
                if ((_EntityRelationships == null))
                {
                    _EntityRelationships = base.CreateObjectSet<EntityRelationship>("EntityRelationships");
                }
                return _EntityRelationships;
            }
        }
        private ObjectSet<EntityRelationship> _EntityRelationships;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignmentObjectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignmentObjectTypes(AssignmentObjectType assignmentObjectType)
        {
            base.AddObject("AssignmentObjectTypes", assignmentObjectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachment attachment)
        {
            base.AddObject("Attachments", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttributeGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributeGroups(AttributeGroup attributeGroup)
        {
            base.AddObject("AttributeGroups", attributeGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributes(Attribute attribute)
        {
            base.AddObject("Attributes", attribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttributeSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributeSets(AttributeSet attributeSet)
        {
            base.AddObject("AttributeSets", attributeSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttributesInSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributesInSets(AttributeInSet attributeInSet)
        {
            base.AddObject("AttributesInSets", attributeInSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntities(Entity entity)
        {
            base.AddObject("Entities", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Values EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValues(EavValue eavValue)
        {
            base.AddObject("Values", eavValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttributeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttributeTypes(AttributeType attributeType)
        {
            base.AddObject("AttributeTypes", attributeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChangeLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChangeLogs(ChangeLog changeLog)
        {
            base.AddObject("ChangeLogs", changeLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Apps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApps(App app)
        {
            base.AddObject("Apps", app);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZones(Zone zone)
        {
            base.AddObject("Zones", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dimensions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDimensions(Dimension dimension)
        {
            base.AddObject("Dimensions", dimension);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ValuesDimensions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValuesDimensions(ValueDimension valueDimension)
        {
            base.AddObject("ValuesDimensions", valueDimension);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataTimeline EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataTimeline(DataTimelineItem dataTimelineItem)
        {
            base.AddObject("DataTimeline", dataTimelineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntityRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntityRelationships(EntityRelationship entityRelationship)
        {
            base.AddObject("EntityRelationships", entityRelationship);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user">No Metadata Documentation available.</param>
        public ObjectResult<ChangeLog> AddChangeLog(global::System.String user)
        {
            ObjectParameter userParameter;
            if (user != null)
            {
                userParameter = new ObjectParameter("User", user);
            }
            else
            {
                userParameter = new ObjectParameter("User", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ChangeLog>("AddChangeLog", userParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="user">No Metadata Documentation available.</param>
        public ObjectResult<ChangeLog> AddChangeLog(global::System.String user, MergeOption mergeOption)
        {
            ObjectParameter userParameter;
            if (user != null)
            {
                userParameter = new ObjectParameter("User", user);
            }
            else
            {
                userParameter = new ObjectParameter("User", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ChangeLog>("AddChangeLog", mergeOption, userParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="changeID">No Metadata Documentation available.</param>
        public int SetChangeLogIdInternal(Nullable<global::System.Int32> changeID)
        {
            ObjectParameter changeIDParameter;
            if (changeID.HasValue)
            {
                changeIDParameter = new ObjectParameter("ChangeID", changeID);
            }
            else
            {
                changeIDParameter = new ObjectParameter("ChangeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SetChangeLogIdInternal", changeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="appId">No Metadata Documentation available.</param>
        public int DeleteAppInternal(Nullable<global::System.Int32> appId)
        {
            ObjectParameter appIdParameter;
            if (appId.HasValue)
            {
                appIdParameter = new ObjectParameter("AppId", appId);
            }
            else
            {
                appIdParameter = new ObjectParameter("AppId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteAppInternal", appIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="App")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class App : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new App object.
        /// </summary>
        /// <param name="appID">Initial value of the AppID property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static App CreateApp(global::System.Int32 appID, global::System.Int32 zoneID, global::System.String name)
        {
            App app = new App();
            app.AppID = appID;
            app.ZoneID = zoneID;
            app.Name = name;
            return app;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                if (_AppID != value)
                {
                    OnAppIDChanging(value);
                    ReportPropertyChanging("AppID");
                    _AppID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppID");
                    OnAppIDChanged();
                }
            }
        }
        private global::System.Int32 _AppID;
        partial void OnAppIDChanging(global::System.Int32 value);
        partial void OnAppIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Zones", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "AttributeSet")]
        public EntityCollection<AttributeSet> AttributeSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "AttributeSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "AttributeSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="AssignmentObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignmentObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignmentObjectType object.
        /// </summary>
        /// <param name="assignmentObjectTypeID">Initial value of the AssignmentObjectTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static AssignmentObjectType CreateAssignmentObjectType(global::System.Int32 assignmentObjectTypeID, global::System.String name, global::System.String description)
        {
            AssignmentObjectType assignmentObjectType = new AssignmentObjectType();
            assignmentObjectType.AssignmentObjectTypeID = assignmentObjectTypeID;
            assignmentObjectType.Name = name;
            assignmentObjectType.Description = description;
            return assignmentObjectType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignmentObjectTypeID
        {
            get
            {
                return _AssignmentObjectTypeID;
            }
            set
            {
                if (_AssignmentObjectTypeID != value)
                {
                    OnAssignmentObjectTypeIDChanging(value);
                    ReportPropertyChanging("AssignmentObjectTypeID");
                    _AssignmentObjectTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignmentObjectTypeID");
                    OnAssignmentObjectTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AssignmentObjectTypeID;
        partial void OnAssignmentObjectTypeIDChanging(global::System.Int32 value);
        partial void OnAssignmentObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_Entities")]
        public EntityCollection<Entity> Entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_Entities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="attachmentID">Initial value of the AttachmentID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="fileContents">Initial value of the FileContents property.</param>
        /// <param name="originalFileName">Initial value of the OriginalFileName property.</param>
        /// <param name="originalFileExtension">Initial value of the OriginalFileExtension property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="isCurrent">Initial value of the IsCurrent property.</param>
        /// <param name="changeLogIDCreated">Initial value of the ChangeLogIDCreated property.</param>
        public static Attachment CreateAttachment(global::System.Int32 attachmentID, global::System.Guid fileID, global::System.Byte[] fileContents, global::System.String originalFileName, global::System.String originalFileExtension, global::System.String mimeType, global::System.Boolean isCurrent, global::System.Int32 changeLogIDCreated)
        {
            Attachment attachment = new Attachment();
            attachment.AttachmentID = attachmentID;
            attachment.FileID = fileID;
            attachment.FileContents = fileContents;
            attachment.OriginalFileName = originalFileName;
            attachment.OriginalFileExtension = originalFileExtension;
            attachment.MimeType = mimeType;
            attachment.IsCurrent = isCurrent;
            attachment.ChangeLogIDCreated = changeLogIDCreated;
            return attachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                if (_AttachmentID != value)
                {
                    OnAttachmentIDChanging(value);
                    ReportPropertyChanging("AttachmentID");
                    _AttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentID");
                    OnAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentID;
        partial void OnAttachmentIDChanging(global::System.Int32 value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Guid _FileID;
        partial void OnFileIDChanging(global::System.Guid value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileContents
        {
            get
            {
                return StructuralObject.GetValidValue(_FileContents);
            }
            set
            {
                OnFileContentsChanging(value);
                ReportPropertyChanging("FileContents");
                _FileContents = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileContents");
                OnFileContentsChanged();
            }
        }
        private global::System.Byte[] _FileContents;
        partial void OnFileContentsChanging(global::System.Byte[] value);
        partial void OnFileContentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _OriginalFileName;
            }
            set
            {
                OnOriginalFileNameChanging(value);
                ReportPropertyChanging("OriginalFileName");
                _OriginalFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalFileName");
                OnOriginalFileNameChanged();
            }
        }
        private global::System.String _OriginalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileExtension
        {
            get
            {
                return _OriginalFileExtension;
            }
            set
            {
                OnOriginalFileExtensionChanging(value);
                ReportPropertyChanging("OriginalFileExtension");
                _OriginalFileExtension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalFileExtension");
                OnOriginalFileExtensionChanged();
            }
        }
        private global::System.String _OriginalFileExtension;
        partial void OnOriginalFileExtensionChanging(global::System.String value);
        partial void OnOriginalFileExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrent
        {
            get
            {
                return _IsCurrent;
            }
            set
            {
                OnIsCurrentChanging(value);
                ReportPropertyChanging("IsCurrent");
                _IsCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrent");
                OnIsCurrentChanged();
            }
        }
        private global::System.Boolean _IsCurrent;
        partial void OnIsCurrentChanging(global::System.Boolean value);
        partial void OnIsCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDCreated
        {
            get
            {
                return _ChangeLogIDCreated;
            }
            set
            {
                OnChangeLogIDCreatedChanging(value);
                ReportPropertyChanging("ChangeLogIDCreated");
                _ChangeLogIDCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDCreated");
                OnChangeLogIDCreatedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDCreated;
        partial void OnChangeLogIDCreatedChanging(global::System.Int32 value);
        partial void OnChangeLogIDCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDDeleted
        {
            get
            {
                return _ChangeLogIDDeleted;
            }
            set
            {
                OnChangeLogIDDeletedChanging(value);
                ReportPropertyChanging("ChangeLogIDDeleted");
                _ChangeLogIDDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDDeleted");
                OnChangeLogIDDeletedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDDeleted;
        partial void OnChangeLogIDDeletedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogCreatedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogDeletedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="Attribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attribute object.
        /// </summary>
        /// <param name="attributeID">Initial value of the AttributeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="staticName">Initial value of the StaticName property.</param>
        /// <param name="changeLogIDCreated">Initial value of the ChangeLogIDCreated property.</param>
        public static Attribute CreateAttribute(global::System.Int32 attributeID, global::System.String type, global::System.String staticName, global::System.Int32 changeLogIDCreated)
        {
            Attribute attribute = new Attribute();
            attribute.AttributeID = attributeID;
            attribute.Type = type;
            attribute.StaticName = staticName;
            attribute.ChangeLogIDCreated = changeLogIDCreated;
            return attribute;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeID
        {
            get
            {
                return _AttributeID;
            }
            set
            {
                if (_AttributeID != value)
                {
                    OnAttributeIDChanging(value);
                    ReportPropertyChanging("AttributeID");
                    _AttributeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeID");
                    OnAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeID;
        partial void OnAttributeIDChanging(global::System.Int32 value);
        partial void OnAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StaticName
        {
            get
            {
                return _StaticName;
            }
            set
            {
                OnStaticNameChanging(value);
                ReportPropertyChanging("StaticName");
                _StaticName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StaticName");
                OnStaticNameChanged();
            }
        }
        private global::System.String _StaticName;
        partial void OnStaticNameChanging(global::System.String value);
        partial void OnStaticNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDCreated
        {
            get
            {
                return _ChangeLogIDCreated;
            }
            set
            {
                OnChangeLogIDCreatedChanging(value);
                ReportPropertyChanging("ChangeLogIDCreated");
                _ChangeLogIDCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDCreated");
                OnChangeLogIDCreatedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDCreated;
        partial void OnChangeLogIDCreatedChanging(global::System.Int32 value);
        partial void OnChangeLogIDCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDDeleted
        {
            get
            {
                return _ChangeLogIDDeleted;
            }
            set
            {
                OnChangeLogIDDeletedChanging(value);
                ReportPropertyChanging("ChangeLogIDDeleted");
                _ChangeLogIDDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDDeleted");
                OnChangeLogIDDeletedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDDeleted;
        partial void OnChangeLogIDDeletedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_AttributesInSets")]
        public EntityCollection<AttributeInSet> AttributesInSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_AttributesInSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_AttributesInSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes")]
        public AttributeType AttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeType>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeType>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeType> AttributeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeType>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeType>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "ToSIC_EAV_AttributeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogCreatedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogDeletedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "EavValue")]
        public EntityCollection<EavValue> Values
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "EavValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "ToSIC_EAV_EntityRelationships")]
        public EntityCollection<EntityRelationship> ToSIC_EAV_EntityRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "ToSIC_EAV_EntityRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "ToSIC_EAV_EntityRelationships", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="AttributeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttributeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttributeGroup object.
        /// </summary>
        /// <param name="attributeGroupID">Initial value of the AttributeGroupID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="attributeSetID">Initial value of the AttributeSetID property.</param>
        public static AttributeGroup CreateAttributeGroup(global::System.Int32 attributeGroupID, global::System.String name, global::System.Int32 sortOrder, global::System.Int32 attributeSetID)
        {
            AttributeGroup attributeGroup = new AttributeGroup();
            attributeGroup.AttributeGroupID = attributeGroupID;
            attributeGroup.Name = name;
            attributeGroup.SortOrder = sortOrder;
            attributeGroup.AttributeSetID = attributeSetID;
            return attributeGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeGroupID
        {
            get
            {
                return _AttributeGroupID;
            }
            set
            {
                if (_AttributeGroupID != value)
                {
                    OnAttributeGroupIDChanging(value);
                    ReportPropertyChanging("AttributeGroupID");
                    _AttributeGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeGroupID");
                    OnAttributeGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeGroupID;
        partial void OnAttributeGroupIDChanging(global::System.Int32 value);
        partial void OnAttributeGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeSetID
        {
            get
            {
                return _AttributeSetID;
            }
            set
            {
                OnAttributeSetIDChanging(value);
                ReportPropertyChanging("AttributeSetID");
                _AttributeSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttributeSetID");
                OnAttributeSetIDChanged();
            }
        }
        private global::System.Int32 _AttributeSetID;
        partial void OnAttributeSetIDChanging(global::System.Int32 value);
        partial void OnAttributeSetIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets")]
        public AttributeSet Set
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeSet> SetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributesInSets")]
        public EntityCollection<AttributeInSet> AttributesInSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributesInSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributesInSets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="AttributeInSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttributeInSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttributeInSet object.
        /// </summary>
        /// <param name="attributeID">Initial value of the AttributeID property.</param>
        /// <param name="attributeSetID">Initial value of the AttributeSetID property.</param>
        /// <param name="attributeGroupID">Initial value of the AttributeGroupID property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isTitle">Initial value of the IsTitle property.</param>
        public static AttributeInSet CreateAttributeInSet(global::System.Int32 attributeID, global::System.Int32 attributeSetID, global::System.Int32 attributeGroupID, global::System.Int32 sortOrder, global::System.Boolean isTitle)
        {
            AttributeInSet attributeInSet = new AttributeInSet();
            attributeInSet.AttributeID = attributeID;
            attributeInSet.AttributeSetID = attributeSetID;
            attributeInSet.AttributeGroupID = attributeGroupID;
            attributeInSet.SortOrder = sortOrder;
            attributeInSet.IsTitle = isTitle;
            return attributeInSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeID
        {
            get
            {
                return _AttributeID;
            }
            set
            {
                if (_AttributeID != value)
                {
                    OnAttributeIDChanging(value);
                    ReportPropertyChanging("AttributeID");
                    _AttributeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeID");
                    OnAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeID;
        partial void OnAttributeIDChanging(global::System.Int32 value);
        partial void OnAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeSetID
        {
            get
            {
                return _AttributeSetID;
            }
            set
            {
                if (_AttributeSetID != value)
                {
                    OnAttributeSetIDChanging(value);
                    ReportPropertyChanging("AttributeSetID");
                    _AttributeSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeSetID");
                    OnAttributeSetIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeSetID;
        partial void OnAttributeSetIDChanging(global::System.Int32 value);
        partial void OnAttributeSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeGroupID
        {
            get
            {
                return _AttributeGroupID;
            }
            set
            {
                OnAttributeGroupIDChanging(value);
                ReportPropertyChanging("AttributeGroupID");
                _AttributeGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttributeGroupID");
                OnAttributeGroupIDChanged();
            }
        }
        private global::System.Int32 _AttributeGroupID;
        partial void OnAttributeGroupIDChanging(global::System.Int32 value);
        partial void OnAttributeGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTitle
        {
            get
            {
                return _IsTitle;
            }
            set
            {
                OnIsTitleChanging(value);
                ReportPropertyChanging("IsTitle");
                _IsTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTitle");
                OnIsTitleChanged();
            }
        }
        private global::System.Boolean _IsTitle;
        partial void OnIsTitleChanging(global::System.Boolean value);
        partial void OnIsTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups")]
        public AttributeGroup Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeGroup> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeGroups", "ToSIC_EAV_AttributeGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes")]
        public Attribute Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attribute> AttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_Attributes", "ToSIC_EAV_Attributes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets")]
        public AttributeSet Set
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeSet> SetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="AttributeSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttributeSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttributeSet object.
        /// </summary>
        /// <param name="attributeSetID">Initial value of the AttributeSetID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="staticName">Initial value of the StaticName property.</param>
        /// <param name="changeLogIDCreated">Initial value of the ChangeLogIDCreated property.</param>
        /// <param name="appID">Initial value of the AppID property.</param>
        /// <param name="alwaysShareConfiguration">Initial value of the AlwaysShareConfiguration property.</param>
        public static AttributeSet CreateAttributeSet(global::System.Int32 attributeSetID, global::System.String name, global::System.String description, global::System.String staticName, global::System.Int32 changeLogIDCreated, global::System.Int32 appID, global::System.Boolean alwaysShareConfiguration)
        {
            AttributeSet attributeSet = new AttributeSet();
            attributeSet.AttributeSetID = attributeSetID;
            attributeSet.Name = name;
            attributeSet.Description = description;
            attributeSet.StaticName = staticName;
            attributeSet.ChangeLogIDCreated = changeLogIDCreated;
            attributeSet.AppID = appID;
            attributeSet.AlwaysShareConfiguration = alwaysShareConfiguration;
            return attributeSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeSetID
        {
            get
            {
                return _AttributeSetID;
            }
            set
            {
                if (_AttributeSetID != value)
                {
                    OnAttributeSetIDChanging(value);
                    ReportPropertyChanging("AttributeSetID");
                    _AttributeSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeSetID");
                    OnAttributeSetIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeSetID;
        partial void OnAttributeSetIDChanging(global::System.Int32 value);
        partial void OnAttributeSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StaticName
        {
            get
            {
                return _StaticName;
            }
            set
            {
                OnStaticNameChanging(value);
                ReportPropertyChanging("StaticName");
                _StaticName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StaticName");
                OnStaticNameChanged();
            }
        }
        private global::System.String _StaticName;
        partial void OnStaticNameChanging(global::System.String value);
        partial void OnStaticNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDCreated
        {
            get
            {
                return _ChangeLogIDCreated;
            }
            set
            {
                OnChangeLogIDCreatedChanging(value);
                ReportPropertyChanging("ChangeLogIDCreated");
                _ChangeLogIDCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDCreated");
                OnChangeLogIDCreatedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDCreated;
        partial void OnChangeLogIDCreatedChanging(global::System.Int32 value);
        partial void OnChangeLogIDCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDDeleted
        {
            get
            {
                return _ChangeLogIDDeleted;
            }
            set
            {
                OnChangeLogIDDeletedChanging(value);
                ReportPropertyChanging("ChangeLogIDDeleted");
                _ChangeLogIDDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDDeleted");
                OnChangeLogIDDeletedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDDeleted;
        partial void OnChangeLogIDDeletedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Scope
        {
            get
            {
                return _Scope;
            }
            set
            {
                OnScopeChanging(value);
                ReportPropertyChanging("Scope");
                _Scope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Scope");
                OnScopeChanged();
            }
        }
        private global::System.String _Scope;
        partial void OnScopeChanging(global::System.String value);
        partial void OnScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                OnAppIDChanging(value);
                ReportPropertyChanging("AppID");
                _AppID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppID");
                OnAppIDChanged();
            }
        }
        private global::System.Int32 _AppID;
        partial void OnAppIDChanging(global::System.Int32 value);
        partial void OnAppIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UsesConfigurationOfAttributeSet
        {
            get
            {
                return _UsesConfigurationOfAttributeSet;
            }
            set
            {
                OnUsesConfigurationOfAttributeSetChanging(value);
                ReportPropertyChanging("UsesConfigurationOfAttributeSet");
                _UsesConfigurationOfAttributeSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsesConfigurationOfAttributeSet");
                OnUsesConfigurationOfAttributeSetChanged();
            }
        }
        private Nullable<global::System.Int32> _UsesConfigurationOfAttributeSet;
        partial void OnUsesConfigurationOfAttributeSetChanging(Nullable<global::System.Int32> value);
        partial void OnUsesConfigurationOfAttributeSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysShareConfiguration
        {
            get
            {
                return _AlwaysShareConfiguration;
            }
            set
            {
                OnAlwaysShareConfigurationChanging(value);
                ReportPropertyChanging("AlwaysShareConfiguration");
                _AlwaysShareConfiguration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysShareConfiguration");
                OnAlwaysShareConfigurationChanged();
            }
        }
        private global::System.Boolean _AlwaysShareConfiguration;
        partial void OnAlwaysShareConfigurationChanging(global::System.Boolean value);
        partial void OnAlwaysShareConfigurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeGroups")]
        public EntityCollection<AttributeGroup> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeGroup>("ToSic.Eav.FK_ToSIC_EAV_AttributeGroups_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributesInSets")]
        public EntityCollection<AttributeInSet> AttributesInSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributesInSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeInSet>("ToSic.Eav.FK_ToSIC_EAV_AttributesInSets_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributesInSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_Entities")]
        public EntityCollection<Entity> Entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_Entities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogCreatedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogDeletedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps")]
        public App App
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<App> AppReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<App>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_Apps", "ToSIC_EAV_Apps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet1")]
        public EntityCollection<AttributeSet> AttributeSetsUsingConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet")]
        public AttributeSet AttributeSetConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeSet> AttributeSetConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_AttributeSets", "AttributeSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="AttributeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttributeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttributeType object.
        /// </summary>
        /// <param name="type">Initial value of the Type property.</param>
        public static AttributeType CreateAttributeType(global::System.String type)
        {
            AttributeType attributeType = new AttributeType();
            attributeType.Type = type;
            return attributeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "Attribute")]
        public EntityCollection<Attribute> Attributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_Types1", "Attribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="ChangeLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChangeLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChangeLog object.
        /// </summary>
        /// <param name="changeID">Initial value of the ChangeID property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        public static ChangeLog CreateChangeLog(global::System.Int32 changeID, global::System.DateTime timestamp)
        {
            ChangeLog changeLog = new ChangeLog();
            changeLog.ChangeID = changeID;
            changeLog.Timestamp = timestamp;
            return changeLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeID
        {
            get
            {
                return _ChangeID;
            }
            set
            {
                if (_ChangeID != value)
                {
                    OnChangeIDChanging(value);
                    ReportPropertyChanging("ChangeID");
                    _ChangeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChangeID");
                    OnChangeIDChanged();
                }
            }
        }
        private global::System.Int32 _ChangeID;
        partial void OnChangeIDChanging(global::System.Int32 value);
        partial void OnChangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "Attachment")]
        public EntityCollection<Attachment> AttachmentsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogCreated", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "Attachment")]
        public EntityCollection<Attachment> AttachmentsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("ToSic.Eav.FK_ToSIC_EAV_Attachments_ToSIC_EAV_ChangeLogDeleted", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "Attribute")]
        public EntityCollection<Attribute> AttributesCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogCreated", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "Attribute")]
        public EntityCollection<Attribute> AttributesDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Attributes_ToSIC_EAV_ChangeLogDeleted", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "AttributeSet")]
        public EntityCollection<AttributeSet> AttributeSetsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "AttributeSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogCreated", "AttributeSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "AttributeSet")]
        public EntityCollection<AttributeSet> AttributeSetsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "AttributeSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_AttributeSets_ToSIC_EAV_ChangeLogDeleted", "AttributeSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "Entity")]
        public EntityCollection<Entity> EntitiesCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "Entity")]
        public EntityCollection<Entity> EntitiesDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "EavValue")]
        public EntityCollection<EavValue> ValuesCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "EavValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "EavValue")]
        public EntityCollection<EavValue> ValuesDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "EavValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "EavValue")]
        public EntityCollection<EavValue> ValuesModified
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "EavValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "Entity")]
        public EntityCollection<Entity> EntitiesModified
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "Entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="DataTimelineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataTimelineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataTimelineItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sourceTable">Initial value of the SourceTable property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="sysCreatedDate">Initial value of the SysCreatedDate property.</param>
        /// <param name="newData">Initial value of the NewData property.</param>
        public static DataTimelineItem CreateDataTimelineItem(global::System.Int32 id, global::System.String sourceTable, global::System.String operation, global::System.DateTime sysCreatedDate, global::System.String newData)
        {
            DataTimelineItem dataTimelineItem = new DataTimelineItem();
            dataTimelineItem.ID = id;
            dataTimelineItem.SourceTable = sourceTable;
            dataTimelineItem.Operation = operation;
            dataTimelineItem.SysCreatedDate = sysCreatedDate;
            dataTimelineItem.NewData = newData;
            return dataTimelineItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceTable
        {
            get
            {
                return _SourceTable;
            }
            set
            {
                OnSourceTableChanging(value);
                ReportPropertyChanging("SourceTable");
                _SourceTable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceTable");
                OnSourceTableChanged();
            }
        }
        private global::System.String _SourceTable;
        partial void OnSourceTableChanging(global::System.String value);
        partial void OnSourceTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceID;
        partial void OnSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SourceGuid
        {
            get
            {
                return _SourceGuid;
            }
            set
            {
                OnSourceGuidChanging(value);
                ReportPropertyChanging("SourceGuid");
                _SourceGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceGuid");
                OnSourceGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _SourceGuid;
        partial void OnSourceGuidChanging(Nullable<global::System.Guid> value);
        partial void OnSourceGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceTextKey
        {
            get
            {
                return _SourceTextKey;
            }
            set
            {
                OnSourceTextKeyChanging(value);
                ReportPropertyChanging("SourceTextKey");
                _SourceTextKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceTextKey");
                OnSourceTextKeyChanged();
            }
        }
        private global::System.String _SourceTextKey;
        partial void OnSourceTextKeyChanging(global::System.String value);
        partial void OnSourceTextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SysCreatedDate
        {
            get
            {
                return _SysCreatedDate;
            }
            set
            {
                OnSysCreatedDateChanging(value);
                ReportPropertyChanging("SysCreatedDate");
                _SysCreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SysCreatedDate");
                OnSysCreatedDateChanged();
            }
        }
        private global::System.DateTime _SysCreatedDate;
        partial void OnSysCreatedDateChanging(global::System.DateTime value);
        partial void OnSysCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SysLogID
        {
            get
            {
                return _SysLogID;
            }
            set
            {
                OnSysLogIDChanging(value);
                ReportPropertyChanging("SysLogID");
                _SysLogID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SysLogID");
                OnSysLogIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SysLogID;
        partial void OnSysLogIDChanging(Nullable<global::System.Int32> value);
        partial void OnSysLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewData
        {
            get
            {
                return _NewData;
            }
            set
            {
                OnNewDataChanging(value);
                ReportPropertyChanging("NewData");
                _NewData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewData");
                OnNewDataChanged();
            }
        }
        private global::System.String _NewData;
        partial void OnNewDataChanging(global::System.String value);
        partial void OnNewDataChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="Dimension")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dimension : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dimension object.
        /// </summary>
        /// <param name="dimensionID">Initial value of the DimensionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        public static Dimension CreateDimension(global::System.Int32 dimensionID, global::System.String name, global::System.Int32 zoneID)
        {
            Dimension dimension = new Dimension();
            dimension.DimensionID = dimensionID;
            dimension.Name = name;
            dimension.ZoneID = zoneID;
            return dimension;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DimensionID
        {
            get
            {
                return _DimensionID;
            }
            set
            {
                if (_DimensionID != value)
                {
                    OnDimensionIDChanging(value);
                    ReportPropertyChanging("DimensionID");
                    _DimensionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DimensionID");
                    OnDimensionIDChanged();
                }
            }
        }
        private global::System.Int32 _DimensionID;
        partial void OnDimensionIDChanging(global::System.Int32 value);
        partial void OnDimensionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemKey
        {
            get
            {
                return _SystemKey;
            }
            set
            {
                OnSystemKeyChanging(value);
                ReportPropertyChanging("SystemKey");
                _SystemKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemKey");
                OnSystemKeyChanged();
            }
        }
        private global::System.String _SystemKey;
        partial void OnSystemKeyChanging(global::System.String value);
        partial void OnSystemKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "Zone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions1")]
        public EntityCollection<Dimension> Childs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions")]
        public Dimension Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dimension> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Dimensions1", "ToSIC_EAV_Dimensions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "ToSIC_EAV_ValuesDimensions")]
        public EntityCollection<ValueDimension> ValuesDimensions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValueDimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "ToSIC_EAV_ValuesDimensions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValueDimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "ToSIC_EAV_ValuesDimensions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="EavValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EavValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EavValue object.
        /// </summary>
        /// <param name="valueID">Initial value of the ValueID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="changeLogIDCreated">Initial value of the ChangeLogIDCreated property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="attributeID">Initial value of the AttributeID property.</param>
        public static EavValue CreateEavValue(global::System.Int32 valueID, global::System.String value, global::System.Int32 changeLogIDCreated, global::System.Int32 entityID, global::System.Int32 attributeID)
        {
            EavValue eavValue = new EavValue();
            eavValue.ValueID = valueID;
            eavValue.Value = value;
            eavValue.ChangeLogIDCreated = changeLogIDCreated;
            eavValue.EntityID = entityID;
            eavValue.AttributeID = attributeID;
            return eavValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueID
        {
            get
            {
                return _ValueID;
            }
            set
            {
                if (_ValueID != value)
                {
                    OnValueIDChanging(value);
                    ReportPropertyChanging("ValueID");
                    _ValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValueID");
                    OnValueIDChanged();
                }
            }
        }
        private global::System.Int32 _ValueID;
        partial void OnValueIDChanging(global::System.Int32 value);
        partial void OnValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDCreated
        {
            get
            {
                return _ChangeLogIDCreated;
            }
            set
            {
                OnChangeLogIDCreatedChanging(value);
                ReportPropertyChanging("ChangeLogIDCreated");
                _ChangeLogIDCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDCreated");
                OnChangeLogIDCreatedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDCreated;
        partial void OnChangeLogIDCreatedChanging(global::System.Int32 value);
        partial void OnChangeLogIDCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDDeleted
        {
            get
            {
                return _ChangeLogIDDeleted;
            }
            set
            {
                OnChangeLogIDDeletedChanging(value);
                ReportPropertyChanging("ChangeLogIDDeleted");
                _ChangeLogIDDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDDeleted");
                OnChangeLogIDDeletedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDDeleted;
        partial void OnChangeLogIDDeletedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeID
        {
            get
            {
                return _AttributeID;
            }
            set
            {
                OnAttributeIDChanging(value);
                ReportPropertyChanging("AttributeID");
                _AttributeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttributeID");
                OnAttributeIDChanged();
            }
        }
        private global::System.Int32 _AttributeID;
        partial void OnAttributeIDChanging(global::System.Int32 value);
        partial void OnAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDModified
        {
            get
            {
                return _ChangeLogIDModified;
            }
            set
            {
                OnChangeLogIDModifiedChanging(value);
                ReportPropertyChanging("ChangeLogIDModified");
                _ChangeLogIDModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDModified");
                OnChangeLogIDModifiedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDModified;
        partial void OnChangeLogIDModifiedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDModifiedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogCreatedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogDeletedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute")]
        public Attribute Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attribute> AttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Attributes", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "ToSIC_EAV_ValuesDimensions")]
        public EntityCollection<ValueDimension> ValuesDimensions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValueDimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "ToSIC_EAV_ValuesDimensions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValueDimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "ToSIC_EAV_ValuesDimensions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog")]
        public ChangeLog ChangeLogModified
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogModifiedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_ChangeLogModified", "ChangeLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="Entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entity object.
        /// </summary>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="attributeSetID">Initial value of the AttributeSetID property.</param>
        /// <param name="assignmentObjectTypeID">Initial value of the AssignmentObjectTypeID property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="entityGUID">Initial value of the EntityGUID property.</param>
        /// <param name="changeLogIDCreated">Initial value of the ChangeLogIDCreated property.</param>
        /// <param name="isPublished">Initial value of the IsPublished property.</param>
        /// <param name="changeLogIDModified">Initial value of the ChangeLogIDModified property.</param>
        public static Entity CreateEntity(global::System.Int32 entityID, global::System.Int32 attributeSetID, global::System.Int32 assignmentObjectTypeID, global::System.Int32 sortOrder, global::System.Guid entityGUID, global::System.Int32 changeLogIDCreated, global::System.Boolean isPublished, global::System.Int32 changeLogIDModified)
        {
            Entity entity = new Entity();
            entity.EntityID = entityID;
            entity.AttributeSetID = attributeSetID;
            entity.AssignmentObjectTypeID = assignmentObjectTypeID;
            entity.SortOrder = sortOrder;
            entity.EntityGUID = entityGUID;
            entity.ChangeLogIDCreated = changeLogIDCreated;
            entity.IsPublished = isPublished;
            entity.ChangeLogIDModified = changeLogIDModified;
            return entity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                if (_EntityID != value)
                {
                    OnEntityIDChanging(value);
                    ReportPropertyChanging("EntityID");
                    _EntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntityID");
                    OnEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeSetID
        {
            get
            {
                return _AttributeSetID;
            }
            set
            {
                OnAttributeSetIDChanging(value);
                ReportPropertyChanging("AttributeSetID");
                _AttributeSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttributeSetID");
                OnAttributeSetIDChanged();
            }
        }
        private global::System.Int32 _AttributeSetID;
        partial void OnAttributeSetIDChanging(global::System.Int32 value);
        partial void OnAttributeSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ConfigurationSet
        {
            get
            {
                return _ConfigurationSet;
            }
            set
            {
                OnConfigurationSetChanging(value);
                ReportPropertyChanging("ConfigurationSet");
                _ConfigurationSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurationSet");
                OnConfigurationSetChanged();
            }
        }
        private Nullable<global::System.Int32> _ConfigurationSet;
        partial void OnConfigurationSetChanging(Nullable<global::System.Int32> value);
        partial void OnConfigurationSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignmentObjectTypeID
        {
            get
            {
                return _AssignmentObjectTypeID;
            }
            set
            {
                OnAssignmentObjectTypeIDChanging(value);
                ReportPropertyChanging("AssignmentObjectTypeID");
                _AssignmentObjectTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignmentObjectTypeID");
                OnAssignmentObjectTypeIDChanged();
            }
        }
        private global::System.Int32 _AssignmentObjectTypeID;
        partial void OnAssignmentObjectTypeIDChanging(global::System.Int32 value);
        partial void OnAssignmentObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyNumber
        {
            get
            {
                return _KeyNumber;
            }
            set
            {
                OnKeyNumberChanging(value);
                ReportPropertyChanging("KeyNumber");
                _KeyNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyNumber");
                OnKeyNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyNumber;
        partial void OnKeyNumberChanging(Nullable<global::System.Int32> value);
        partial void OnKeyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> KeyGuid
        {
            get
            {
                return _KeyGuid;
            }
            set
            {
                OnKeyGuidChanging(value);
                ReportPropertyChanging("KeyGuid");
                _KeyGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyGuid");
                OnKeyGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _KeyGuid;
        partial void OnKeyGuidChanging(Nullable<global::System.Guid> value);
        partial void OnKeyGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyString
        {
            get
            {
                return _KeyString;
            }
            set
            {
                OnKeyStringChanging(value);
                ReportPropertyChanging("KeyString");
                _KeyString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeyString");
                OnKeyStringChanged();
            }
        }
        private global::System.String _KeyString;
        partial void OnKeyStringChanging(global::System.String value);
        partial void OnKeyStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EntityGUID
        {
            get
            {
                return _EntityGUID;
            }
            set
            {
                OnEntityGUIDChanging(value);
                ReportPropertyChanging("EntityGUID");
                _EntityGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityGUID");
                OnEntityGUIDChanged();
            }
        }
        private global::System.Guid _EntityGUID;
        partial void OnEntityGUIDChanging(global::System.Guid value);
        partial void OnEntityGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDCreated
        {
            get
            {
                return _ChangeLogIDCreated;
            }
            set
            {
                OnChangeLogIDCreatedChanging(value);
                ReportPropertyChanging("ChangeLogIDCreated");
                _ChangeLogIDCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDCreated");
                OnChangeLogIDCreatedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDCreated;
        partial void OnChangeLogIDCreatedChanging(global::System.Int32 value);
        partial void OnChangeLogIDCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeLogIDDeleted
        {
            get
            {
                return _ChangeLogIDDeleted;
            }
            set
            {
                OnChangeLogIDDeletedChanging(value);
                ReportPropertyChanging("ChangeLogIDDeleted");
                _ChangeLogIDDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDDeleted");
                OnChangeLogIDDeletedChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeLogIDDeleted;
        partial void OnChangeLogIDDeletedChanging(Nullable<global::System.Int32> value);
        partial void OnChangeLogIDDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private global::System.Boolean _IsPublished;
        partial void OnIsPublishedChanging(global::System.Boolean value);
        partial void OnIsPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PublishedEntityId
        {
            get
            {
                return _PublishedEntityId;
            }
            set
            {
                OnPublishedEntityIdChanging(value);
                ReportPropertyChanging("PublishedEntityId");
                _PublishedEntityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedEntityId");
                OnPublishedEntityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PublishedEntityId;
        partial void OnPublishedEntityIdChanging(Nullable<global::System.Int32> value);
        partial void OnPublishedEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeLogIDModified
        {
            get
            {
                return _ChangeLogIDModified;
            }
            set
            {
                OnChangeLogIDModifiedChanging(value);
                ReportPropertyChanging("ChangeLogIDModified");
                _ChangeLogIDModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeLogIDModified");
                OnChangeLogIDModifiedChanged();
            }
        }
        private global::System.Int32 _ChangeLogIDModified;
        partial void OnChangeLogIDModifiedChanging(global::System.Int32 value);
        partial void OnChangeLogIDModifiedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes")]
        public AssignmentObjectType AssignmentObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentObjectType>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentObjectType>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssignmentObjectType> AssignmentObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentObjectType>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssignmentObjectType>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AssignmentObjectTypes", "ToSIC_EAV_AssignmentObjectTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets")]
        public AttributeSet Set
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttributeSet> SetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttributeSet>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_AttributeSets", "ToSIC_EAV_AttributeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_Entities", "ToSIC_EAV_Entities1")]
        public EntityCollection<Entity> Entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_Entities", "ToSIC_EAV_Entities1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_Entities", "ToSIC_EAV_Entities1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogCreatedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogCreated", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog")]
        public ChangeLog ChangeLogDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogDeletedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLogDeleted", "ToSIC_EAV_ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "EavValue")]
        public EntityCollection<EavValue> Values
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EavValue>("ToSic.Eav.FK_ToSIC_EAV_Values_ToSIC_EAV_Entities", "EavValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog")]
        public ChangeLog ChangeLogModified
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChangeLog> ChangeLogModifiedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChangeLog>("ToSic.Eav.FK_ToSIC_EAV_Entities_ToSIC_EAV_ChangeLog_Modified", "ChangeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "ToSIC_EAV_EntityRelationships")]
        public EntityCollection<EntityRelationship> EntityChildRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "ToSIC_EAV_EntityRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "ToSIC_EAV_EntityRelationships", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "ToSIC_EAV_EntityRelationships")]
        public EntityCollection<EntityRelationship> EntityParentRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "ToSIC_EAV_EntityRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityRelationship>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "ToSIC_EAV_EntityRelationships", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="EntityRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityRelationship object.
        /// </summary>
        /// <param name="attributeID">Initial value of the AttributeID property.</param>
        /// <param name="parentEntityID">Initial value of the ParentEntityID property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static EntityRelationship CreateEntityRelationship(global::System.Int32 attributeID, global::System.Int32 parentEntityID, global::System.Int32 sortOrder)
        {
            EntityRelationship entityRelationship = new EntityRelationship();
            entityRelationship.AttributeID = attributeID;
            entityRelationship.ParentEntityID = parentEntityID;
            entityRelationship.SortOrder = sortOrder;
            return entityRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttributeID
        {
            get
            {
                return _AttributeID;
            }
            set
            {
                if (_AttributeID != value)
                {
                    OnAttributeIDChanging(value);
                    ReportPropertyChanging("AttributeID");
                    _AttributeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttributeID");
                    OnAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _AttributeID;
        partial void OnAttributeIDChanging(global::System.Int32 value);
        partial void OnAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentEntityID
        {
            get
            {
                return _ParentEntityID;
            }
            set
            {
                if (_ParentEntityID != value)
                {
                    OnParentEntityIDChanging(value);
                    ReportPropertyChanging("ParentEntityID");
                    _ParentEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentEntityID");
                    OnParentEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _ParentEntityID;
        partial void OnParentEntityIDChanging(global::System.Int32 value);
        partial void OnParentEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChildEntityID
        {
            get
            {
                return _ChildEntityID;
            }
            set
            {
                OnChildEntityIDChanging(value);
                ReportPropertyChanging("ChildEntityID");
                _ChildEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildEntityID");
                OnChildEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChildEntityID;
        partial void OnChildEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnChildEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                if (_SortOrder != value)
                {
                    OnSortOrderChanging(value);
                    ReportPropertyChanging("SortOrder");
                    _SortOrder = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SortOrder");
                    OnSortOrderChanged();
                }
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute")]
        public Attribute Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attribute> AttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attribute>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_Attributes", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity")]
        public Entity ChildEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> ChildEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ChildEntities", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity")]
        public Entity ParentEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> ParentEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("ToSic.Eav.FK_ToSIC_EAV_EntityRelationships_ToSIC_EAV_ParentEntities", "Entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="ValueDimension")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ValueDimension : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ValueDimension object.
        /// </summary>
        /// <param name="valueID">Initial value of the ValueID property.</param>
        /// <param name="dimensionID">Initial value of the DimensionID property.</param>
        public static ValueDimension CreateValueDimension(global::System.Int32 valueID, global::System.Int32 dimensionID)
        {
            ValueDimension valueDimension = new ValueDimension();
            valueDimension.ValueID = valueID;
            valueDimension.DimensionID = dimensionID;
            return valueDimension;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueID
        {
            get
            {
                return _ValueID;
            }
            set
            {
                if (_ValueID != value)
                {
                    OnValueIDChanging(value);
                    ReportPropertyChanging("ValueID");
                    _ValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValueID");
                    OnValueIDChanged();
                }
            }
        }
        private global::System.Int32 _ValueID;
        partial void OnValueIDChanging(global::System.Int32 value);
        partial void OnValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DimensionID
        {
            get
            {
                return _DimensionID;
            }
            set
            {
                if (_DimensionID != value)
                {
                    OnDimensionIDChanging(value);
                    ReportPropertyChanging("DimensionID");
                    _DimensionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DimensionID");
                    OnDimensionIDChanged();
                }
            }
        }
        private global::System.Int32 _DimensionID;
        partial void OnDimensionIDChanging(global::System.Int32 value);
        partial void OnDimensionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReadOnly
        {
            get
            {
                return _ReadOnly;
            }
            set
            {
                OnReadOnlyChanging(value);
                ReportPropertyChanging("ReadOnly");
                _ReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadOnly");
                OnReadOnlyChanged();
            }
        }
        private global::System.Boolean _ReadOnly = false;
        partial void OnReadOnlyChanging(global::System.Boolean value);
        partial void OnReadOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension")]
        public Dimension Dimension
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dimension> DimensionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dimension>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Dimensions", "Dimension", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue")]
        public EavValue Value
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EavValue>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EavValue>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EavValue> ValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EavValue>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EavValue>("ToSic.Eav.FK_ToSIC_EAV_ValuesDimensions_ToSIC_EAV_Values", "EavValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToSic.Eav", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Zone CreateZone(global::System.Int32 zoneID, global::System.String name)
        {
            Zone zone = new Zone();
            zone.ZoneID = zoneID;
            zone.Name = name;
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                if (_ZoneID != value)
                {
                    OnZoneIDChanging(value);
                    ReportPropertyChanging("ZoneID");
                    _ZoneID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneID");
                    OnZoneIDChanged();
                }
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Apps")]
        public EntityCollection<App> Apps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<App>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Apps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<App>("ToSic.Eav.FK_ToSIC_EAV_Apps_ToSIC_EAV_Zones", "ToSIC_EAV_Apps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToSic.Eav", "FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "ToSIC_EAV_Dimensions")]
        public EntityCollection<Dimension> Dimensions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "ToSIC_EAV_Dimensions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dimension>("ToSic.Eav.FK_ToSIC_EAV_Dimensions_ToSIC_EAV_Zones", "ToSIC_EAV_Dimensions", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
